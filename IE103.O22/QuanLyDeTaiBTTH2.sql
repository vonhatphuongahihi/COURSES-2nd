CREATE DATABASE QUANLYDETAIBTTH2
USE QUANLYDETAIBTTH2
-- 1. Tạo bảng --
CREATE TABLE SINHVIEN (
	 MSSV CHAR(8) PRIMARY KEY,
	 TENSV NVARCHAR(30) NOT NULL,
	 SODT VARCHAR(10),
	 LOP CHAR(10) NOT NULL,
	 DIACHI NCHAR(50) NOT NULL
)

CREATE TABLE DETAI(
	MSDT CHAR(6) PRIMARY KEY,
	TENDT NVARCHAR(30) NOT NULL
)

CREATE TABLE SV_DETAI(
	MSSV CHAR(8) FOREIGN KEY REFERENCES SINHVIEN(MSSV),
	MSDT CHAR(6) FOREIGN KEY REFERENCES DETAI(MSDT)
)

CREATE TABLE HOCHAM(
	MSHH INT PRIMARY KEY,
	TENHH NVARCHAR(20) NOT NULL
)

CREATE TABLE GIAOVIEN(
	MSGV CHAR(5) PRIMARY KEY,
	TENGV NVARCHAR(30) NOT NULL,
	DIACHI NVARCHAR(50) NOT NULL,
	SODT VARCHAR(10) NOT NULL,
	MSHH INT FOREIGN KEY REFERENCES HOCHAM(MSHH),
	NAMHH SMALLDATETIME NOT NULL
)

CREATE TABLE HOCVI(
	MSHV INT PRIMARY KEY,
	TENHV NVARCHAR(20) NOT NULL
)

CREATE TABLE CHUYENNGANH(
	MSCN INT PRIMARY KEY,
	TENCN NVARCHAR(30) NOT NULL
)

CREATE TABLE GV_HV_CN(
	MSGV CHAR(5) NOT NULL,
	MSHV INT NOT NULL,
	MSCN INT NOT NULL,
	NAM SMALLDATETIME NOT NULL,
	PRIMARY KEY (MSGV, MSHV, MSCN),
	FOREIGN KEY (MSGV) REFERENCES GIAOVIEN (MSGV),
	FOREIGN KEY (MSHV) REFERENCES HOCVI (MSHV),
	FOREIGN KEY (MSCN) REFERENCES CHUYENNGANH(MSCN)
)

CREATE TABLE GV_HDDT(
	MSGV CHAR(5) NOT NULL,
	MSDT CHAR(6) NOT NULL,
	DIEM FLOAT NOT NULL
	PRIMARY KEY(MSGV, MSDT),
	FOREIGN KEY (MSGV) REFERENCES GIAOVIEN (MSGV),
	FOREIGN KEY (MSDT) REFERENCES DETAI (MSDT)
)

CREATE TABLE GV_PBDT(
	MSGV CHAR(5) NOT NULL,
	MSDT CHAR(6) NOT NULL,
	DIEM FLOAT NOT NULL
	PRIMARY KEY(MSGV, MSDT),
	FOREIGN KEY (MSGV) REFERENCES GIAOVIEN (MSGV),
	FOREIGN KEY (MSDT) REFERENCES DETAI (MSDT)
)

CREATE TABLE GV_UVDT(
	MSGV CHAR(5) NOT NULL,
	MSDT CHAR(6) NOT NULL,
	DIEM FLOAT NOT NULL,
	PRIMARY KEY(MSGV, MSDT),
	FOREIGN KEY (MSGV) REFERENCES GIAOVIEN (MSGV),
	FOREIGN KEY (MSDT) REFERENCES DETAI (MSDT)
)

CREATE TABLE HOIDONG(
	MSHD INT PRIMARY KEY,
	PHONG INT,
	TGBD SMALLDATETIME,
	NGAYHD SMALLDATETIME NOT NULL,
	TINHTRANG NVARCHAR(30) NOT NULL,
	MSGV CHAR(5) FOREIGN KEY REFERENCES GIAOVIEN (MSGV)
)

CREATE TABLE HOIDONG_GV(
	MSHD INT NOT NULL,
	MSGV CHAR(5) NOT NULL,
	PRIMARY KEY(MSHD, MSGV),
	FOREIGN KEY (MSGV) REFERENCES GIAOVIEN (MSGV),
	FOREIGN KEY (MSHD) REFERENCES HOIDONG (MSHD)
)
CREATE TABLE HOIDONG_DT(
	MSHD INT NOT NULL,
	MSDT CHAR(6) NOT NULL,
	QUYETDINH NCHAR(10)
	PRIMARY KEY(MSHD, MSDT),
	FOREIGN KEY (MSDT) REFERENCES DETAI (MSDT),
	FOREIGN KEY (MSHD) REFERENCES HOIDONG (MSHD)
)
-- 2. Insert dữ liệu vào SQL --
INSERT INTO SINHVIEN(MSSV, TENSV, SODT, LOP, DIACHI)
	VALUES('13520001', N'Nguyễn Văn An', '0906762255', 'SE103.U32', N'THỦ ĐỨC'),
	('13520002', N'Phan Tấn Đạt', '0975672350', 'IE204.T21', N'QUẬN 1'),
	('13520003',N'Nguyễn Anh Hải', '0947578688', 'E205.R12', N'QUẬN 9'),
	('13520004',N'Phạm Tài', '0956757869', 'IE202.A22', N'QUẬN 1'),
	('13520005',N'Lê Thúy Hằng', '0976668688','SE304.E22',N'THỦ ĐỨC'),
	('13520006', N'Ưng Hồng Ân', '0957475898' ,'IE208.F33', N'QUẬN 2')

INSERT INTO DETAI (MSDT, TENDT)
VALUES ('97001', N'Quản lý thư viện'),
	   ('97002', N'Nhận dạng vân tay'),
		('97003' ,N'Bán đấu giá trên mạng'),
		('97004', N'Quản lý siêu thị'),
		('97005', N'Xử lý ảnh'),
		('97006', N'Hệ giải toán thông minh')
INSERT INTO SV_DETAI (MSSV, MSDT)
VALUES ('13520001','97004'),
	   ('13520002', '97005'),
	   ('13520003', '97001'),
	   ('13520004','97002'),
	   ('13520005', '97003'),
	   ('13520006', '97005')

INSERT INTO HOCHAM (MSHH, TENHH)
VALUES (1, N'PHÓ GIÁO SƯ'),
	   (2, N'GIÁO SƯ')

INSERT INTO GIAOVIEN (MSGV, TENGV, DIACHI, SODT, MSHH, NAMHH)
VALUES ('00201', N'Trần Trung', N'Bến Tre', 35353535, 1, '1996'),
	   ('00202', N'Nguyễn Văn An', N'Tiền Giang', 67868688, 1, '1996'),
	('00203', N'Trần Thu Trang', N'Cần Thơ', 74758687, 1, '1996'),
		('00204',  N'Nguyễn Thị Loan',  N'TP. HCM', 56575868, 2, '2005'),
	('00205', N'Chu Tiến', N'Hà Nội', 46466646, 2, '2005')

INSERT INTO HOCVI (MSHV, TENHV)
VALUES (1, N'Kỹ sư'),
	   (2, N'Cử nhân'),
	   (3, N'Thạc sĩ'),
	   (4, N'Tiến sĩ'),
	   (5, N'Tiến sĩ Khoa học')

INSERT INTO CHUYENNGANH (MSCN, TENCN)
VALUES (1, N'Công nghệ Web'),
	   (2, N'Mạng xã hội'),
	   (3, N'Quản lý CNTT'),
	   (4, N'GIS')

INSERT INTO GV_HV_CN(MSGV,MSHV,MSCN,NAM)
VALUES ('00201', 1, 1, '2013'),
		('00201',1,2, '2013'),
		('00201',2,1, '2014'),
		('00202',3,2, '2013'),
		('00203',2,4, '2014'),
		('00204',3, 2, '2014')

INSERT INTO GV_HDDT(MSGV, MSDT, DIEM)
VALUES ('00201', '97001', 8),
		('00202', '97002', 7),
		('00205', '97001', 9),
		('00204', '97004', 7),
		('00203', '97005', 9)
INSERT INTO GV_PBDT  (MSGV, MSDT, DIEM)
VALUES  ('00201', '97005', 8),
		('00202', '97001', 7),
		('00205', '97004', 9),
		('00204', '97003', 7),
		('00203', '97002', 9)

INSERT INTO GV_UVDT (MSGV, MSDT, DIEM)
VALUES  ('00205', '97005', 8),
		('00202', '97005', 7),
		('00204', '97005', 9),
		('00203', '97001', 7),
		('00204', '97001', 9),
		('00205', '97001', 8),
		('00203', '97003', 7),
		('00201', '97003', 9),
		('00202', '97003', 7),
		('00201', '97004', 9),
		('00202', '97004', 8),
		('00203', '97004', 7),
		('00201', '97002', 9),
		('00204', '97002', 7),
		('00205', '97002', 9),
		('00201', '97006', 9),
		('00202', '97006', 7),
		('00204', '97006', 9)

INSERT INTO HOIDONG (MSHD, PHONG, TGBD, NGAYHD, TINHTRANG, MSGV)
VALUES  (1,'002', '7:00', '2014-11-29', N'Thật', '00201'),
		(2,'102', '7:00', '2014-12-05', N'Thật', '00202'),
		(3,'003', '8:00', '2014-12-06', N'Thật', '00203')

INSERT INTO HOIDONG_GV (MSHD,MSGV)
VALUES  (1, '00201'),
		(1, '00202'),
		(1, '00203'),
		(1, '00204'),
		(2, '00203'),
		(2, '00202'),
		(2, '00205'),
		(2, '00204'),
		(3, '00201'),
		(3, '00202'),
		(3, '00203'),
		(3, '00204')

INSERT INTO HOIDONG_DT (MSHD, MSDT, QUYETDINH)
VALUES  (1, '97001', N'Được'),
		(1, '97002', N'Được'),
		(2, '97001', N'Không'),
		(2, '97004', N'Không'),
		(1, '97005', N'Được'),
		(3, '97001', N'Không'),
		(3, '97002', N'Được')
-- A.	STORED PROCEDUREDS VỚI THAM SỐ ẢO --
--A1--
GO
CREATE PROCEDURE Proc_insert_GV_1 
(@MSGV CHAR(5), @TENGV NVARCHAR(30),
@DIACHI NVARCHAR(30), @SODT VARCHAR(10), @MSHH INT, @NAMHH SMALLDATETIME)
AS
	IF EXISTS (SELECT * FROM HOCHAM WHERE MSHH = @MSHH)
		BEGIN
			INSERT INTO GIAOVIEN
			VALUES (@MSGV, @TENGV, @SODT, @DIACHI, @MSHH, @NAMHH)
			PRINT N'Đã chèn thành công'       
		END     
	ELSE       
		BEGIN         
			PRINT N'Chèn không thành công, không tìm thấy MSHH = ' + CAST (@MSHH AS CHAR)
			RETURN 0
		END  
GO

EXECUTE Proc_insert_GV_1 '00206', N'Lê Hoàng Hạ Uyển', N'Khánh Hòa', '09745673', 2, '2022'

-- A2--
GO
CREATE PROCEDURE Proc_insert_GV_2
(@MSGV char(5), @TENGV NVARCHAR(30),
@DIACHI NVARCHAR(30), @SODT VARCHAR(10),  @MSHH INT, @NAMHH SMALLDATETIME)
AS
	IF EXISTS (SELECT * FROM GIAOVIEN WHERE MSGV=@MSGV)
		BEGIN
			PRINT N'Chèn không thành công, MSGV	bị trùng'
			RETURN 0
		END
	ELSE 
		BEGIN
			INSERT INTO GIAOVIEN VALUES(@MSGV, @TENGV, @DIACHI, @SODT, @MSHH, @NAMHH)
			PRINT N'Đã chèn thành công'
		END
GO

EXEC Proc_insert_GV_1 '00208', N'Võ Thanh Bình', N'Bà Rịa Vũng Tàu', '09745673', 3, '2023'

SELECT *FROM GIAOVIEN
-- A3--
GO
CREATE PROCEDURE Proc_insert_GV_3 (@MSGV char(5), @TENGV NVARCHAR(30),
@DIACHI NVARCHAR(30), @SODT VARCHAR(10),  @MSHH INT, @NAMHH SMALLDATETIME)
AS
BEGIN
	IF NOT EXISTS (SELECT * FROM GIAOVIEN WHERE @MSGV=MSGV)
		BEGIN
			IF EXISTS (SELECT * FROM HOCHAM WHERE @MSHH=MSHH)
			BEGIN
				INSERT INTO GIAOVIEN VALUES (@MSGV, @TENGV, @DIACHI, @SODT, @MSHH, @NAMHH)
				PRINT N'Đã chèn thành công'
			END
			ELSE
			BEGIN
				PRINT N'Chèn không thành công, MSHH không tồn tại'
				RETURN 1
			END
		END
	ELSE 
		BEGIN
			PRINT N'Chèn không thành công, MSGV đã tồn tại'
			RETURN 0
		END
END

EXEC Proc_insert_GV_3 '00208', N'Nguyễn Châu Anh', N'Kiên Giang', '09745679', 1, '2021'
-- A4--
GO
CREATE PROCEDURE Proc_MSDT_4 (@MSDT CHAR(6), @TENDT NVARCHAR(30))
AS
	IF EXISTS (SELECT * FROM DETAI WHERE @MSDT=MSDT)
	BEGIN
		UPDATE DETAI
		SET TENDT = @TENDT WHERE MSDT=@MSDT
		PRINT N'Cập nhật thành công tên đề tài mới'
		RETURN 1
	END
	ELSE 
	BEGIN
		PRINT N'Cập nhật không thành công, không tìm thấy MSDT'
		RETURN 0
	END

EXEC Proc_MSDT_4 '97003', N'Rạp chiếu phim'

--5--
GO
CREATE  PROCEDURE Proc_MSSV_5 (@MSSV CHAR(8), @TENSV NVARCHAR(30), @DIACHI NCHAR(50))
AS
	IF EXISTS (SELECT * FROM SINHVIEN WHERE @MSSV=MSSV)
		BEGIN
			UPDATE SINHVIEN
			SET TENSV=@TENSV, DIACHI=@DIACHI
			WHERE MSSV=@MSSV
			PRINT N'Cập nhật thành công tên và địa chỉ mới của sinh viên'
			RETURN 1
		END
	ELSE
		BEGIN
			PRINT N'Cập nhật không thành công, không tìm thấy MSSV'
			RETURN 0
		END

	EXEC Proc_MSSV_5 '13520001', N'Võ Nhất Phương', 'KHÁNH HÒA'

	-- B1 --
	
	GO
	CREATE PROCEDURE Proc_SoGV_b1 @TENHV NVARCHAR(20), @SOGV INT OUTPUT
	AS
	BEGIN
		IF EXISTS (SELECT * FROM HOCVI WHERE TENHV=@TENHV)
			BEGIN
				SELECT @SOGV = COUNT(*)
				FROM HOCVI, GV_HV_CN
				WHERE HOCVI.MSHV = GV_HV_CN.MSHV 
				AND HOCVI.TENHV = @TENHV
			END
		ELSE
			SET @SOGV=0;
	END
	DECLARE @OutputSOGV INT;
	EXEC Proc_SoGV_b1 N'Cử nhân', @SOGV = @OutputSOGV OUTPUT;
	SELECT @OutputSOGV AS SoGV;

	-- B2 --
	GO
	CREATE PROCEDURE Proc_DTB_MSDT @MSDT CHAR(6), @DTB NUMERIC(5,2) OUTPUT
	AS
	BEGIN
		DECLARE @TongDiem FLOAT

		SELECT @TongDiem = COALESCE(SUM(DIEM), 0)
		FROM (
			SELECT DIEM FROM GV_HDDT WHERE MSDT = @MSDT
			UNION ALL
			SELECT DIEM FROM GV_PBDT WHERE MSDT = @MSDT
			UNION ALL
			SELECT DIEM FROM GV_UVDT WHERE MSDT = @MSDT
		) AS Diem

		DECLARE @NumRecords INT
		SELECT @NumRecords = COUNT(*) 
		FROM (
			SELECT DIEM FROM GV_HDDT WHERE MSDT = @MSDT
			UNION ALL
			SELECT DIEM FROM GV_PBDT WHERE MSDT = @MSDT
			UNION ALL
			SELECT DIEM FROM GV_UVDT WHERE MSDT = @MSDT
		) AS Records

		IF @NumRecords = 0
		BEGIN
			SET @DTB = 0
			RETURN
		END

		SET @DTB = @TongDiem / @NumRecords
	END

	DECLARE @DIEMTB NUMERIC(5,2)
	EXEC Proc_DTB_MSDT @MSDT = '97006', @DTB = @DIEMTB OUTPUT
	PRINT N'Điểm trung bình của đề tài 97006 là: ' + CAST(@DIEMTB AS NVARCHAR(10))

-- B3 --
GO
CREATE PROCEDURE Proc_TENGV_SDT 
    @TENGV NVARCHAR(30), 
    @SODT VARCHAR(10) OUTPUT
AS
    IF EXISTS (SELECT * FROM GIAOVIEN WHERE TENGV = @TENGV)
    BEGIN
        DECLARE @TRUNGTEN INT = 0

        SELECT @TRUNGTEN = COUNT(MSGV) 
        FROM GIAOVIEN
        WHERE TENGV = @TENGV

        IF (@TRUNGTEN = 1)
        BEGIN
            SELECT @SODT = SODT 
            FROM GIAOVIEN
            WHERE TENGV = @TENGV
            PRINT N'Số điện thoại của giáo viên ' + @TENGV + N' là ' + @SODT
        END
        ELSE 
        BEGIN
            PRINT N'Có nhiều hơn một giáo viên có cùng tên ' + @TENGV
			DECLARE @DEM INT = 0, @SODONG INT = 0, @TEMP INT = 0
			WHILE (@DEM < @TRUNGTEN)
			BEGIN
				WITH GVTRUNG AS
					(
					SELECT SODT, ROW_NUMBER() OVER (ORDER BY TENGV) AS SODONG
					FROM GIAOVIEN WHERE @TENGV=TENGV
					)
				SELECT @SODT=SODT FROM GVTRUNG WHERE SODONG=@DEM+1
				PRINT N'Số điện thoại của giáo viên ' + @TENGV + ' là ' + @SODT
				SET @DEM = @DEM + 1
			END
		END
	END
	ELSE
		BEGIN
		 PRINT N'Số điện thoại không tồn tại do không tìm thấy TENGV'
         RETURN 0
        END

INSERT INTO GIAOVIEN 
VALUES ('00207',N'Chu Tiến',N'Hà Nội','12223423', 2, '2005')
DECLARE @VTENGV NVARCHAR(30), @VSODT VARCHAR(10)
EXEC Proc_TENGV_SDT N'Chu Tiến', @VSODT OUTPUT
-- B4--
GO
CREATE PROCEDURE proc_DTB_MSHD @MSHD INT, @DTB NUMERIC(5,2) OUTPUT
AS
	IF EXISTS (SELECT * FROM HOIDONG_GV WHERE @MSHD=MSHD)
		BEGIN
			SELECT @DTB = AVG(DIEM) FROM
			((SELECT DIEM FROM HOIDONG_DT A, GV_HDDT B 
			WHERE A.MSDT=B.MSDT AND @MSHD=A.MSHD)
			UNION ALL
			(SELECT DIEM FROM HOIDONG_DT A, GV_PBDT B
			WHERE A.MSDT=B.MSDT AND @MSHD=A.MSHD)
			UNION ALL
			(SELECT DIEM FROM HOIDONG_DT A, GV_UVDT B
			WHERE A.MSDT=B.MSDT AND @MSHD=A.MSHD))
			AS TONGDIEM
			PRINT N'Điểm trung bình các đề tài của hội đồng '+ 
			CAST (@MSHD AS VARCHAR) + N' là ' + CAST(@DTB AS VARCHAR)
		END
	ELSE
		BEGIN
			PRINT N'Không tồn tại MSHD này'
			RETURN 0
		END
		
		DECLARE @VMSHD INT, @VDTB NUMERIC(5,2)
		EXEC Proc_DTB_MSHD  5, @VDTB OUTPUT

-- B5 --

GO
CREATE PROCEDURE proc_TENGV @TENGV NVARCHAR(30), @HD INT OUTPUT, @PB INT OUTPUT
AS
	IF EXISTS (SELECT * FROM GIAOVIEN WHERE @TENGV=TENGV)
		BEGIN
			DECLARE @TRUNGTEN INT =0
			SELECT @TRUNGTEN = COUNT (MSGV) FROM GIAOVIEN
			WHERE @TENGV=TENGV
			IF (@TRUNGTEN =1) 
				BEGIN
					SELECT @HD = COUNT(HD.MSGV) FROM GIAOVIEN GV, GV_HDDT HD
					WHERE @TENGV=TENGV AND GV.MSGV=HD.MSGV
					SELECT @PB = COUNT(PB.MSGV) FROM GIAOVIEN GV, GV_PBDT PB
					WHERE @TENGV=TENGV AND PB.MSGV = GV.MSGV
					PRINT N'Số đề tài hướng dẫn và phản biện của giáo viên ' + @TENGV + N' lần lượt là '
					+ CAST(@HD AS VARCHAR) + N' và ' + CAST(@PB AS VARCHAR)
				END
			ELSE 
				BEGIN
					PRINT N'Có ' + CAST(@TRUNGTEN AS VARCHAR) + N' giáo viên trùng tên'           
					DECLARE @i INT = 0, @MSGV CHAR(5)           
					WHILE (@i < @TRUNGTEN)             
						BEGIN        
							WITH GVBACKUP AS          
							(                   
								SELECT MSGV, ROW_NUMBER() OVER (ORDER BY TENGV) AS ROWNUMBER 
								FROM GIAOVIEN WHERE @TENGV = TENGV        
							)           
							SELECT @HD = COUNT(HD.MSGV) 
							FROM GVBACKUP GV, GV_HDDT HD         
							WHERE ROWNUMBER = @i + 1 AND GV.MSGV = HD.MSGV;         
							WITH GVBACKUP AS          
								(                   
									SELECT MSGV, ROW_NUMBER() OVER (ORDER BY TENGV) AS ROWNUMBER                 
									FROM GIAOVIEN WHERE @TENGV = TENGV        
								)           
							SELECT @PB = COUNT(PB.MSGV), @MSGV = PB.MSGV 
							FROM GVBACKUP GV, GV_PBDT PB 
							WHERE ROWNUMBER = @i + 1 AND GV.MSGV = PB.MSGV        
							GROUP BY PB.MSGV;         
							PRINT N'Số đề tài hướng dẫn và phản biện của giáo viên có MSGV = '         +' '+ @MSGV + 
							' '+ @TENGV + N' lần lượt là '        + CAST(@HD AS VARCHAR) + N' và ' + CAST(@PB AS VARCHAR)        
							SET @i = @i + 1             
						END         
					END     
				END  
				ELSE     
				BEGIN       
				PRINT N'Không tồn tại tên giáo viên'     
				END
DECLARE @B5_HD INT, @B5_PB INT
EXEC proc_TENGV N'Trần Trung', @B5_HD, @B5_PB
insert into GIAOVIEN (MSGV, TENGV, DIACHI, SODT, MSHH, NAMHH)
VALUES ('00208', N'Trần Trung', N'Khánh Hòa', '03654861', 1, '2005')
drop proc  proc_TENGV
select * from GIAOVIEN

-- C1 --
GO
CREATE TRIGGER C1 ON DETAI FOR DELETE
AS
	BEGIN
		DECLARE @MSDT CHAR(6)
		SELECT @MSDT FROM  DELETED
		DELETE FROM SV_DETAI WHERE MSDT = @MSDT
		DELETE FROM GV_HDDT WHERE MSDT = @MSDT       
		DELETE FROM GV_PBDT WHERE MSDT = @MSDT       
		DELETE FROM GV_UVDT WHERE MSDT = @MSDT       
		DELETE FROM HOIDONG_DT WHERE MSDT = @MSDT
	END
	SELECT * FROM DETAI
-- C2 --
GO
CREATE TRIGGER CheckHoiDongLimit
ON HOIDONG_DT
AFTER INSERT, UPDATE
AS
BEGIN
    DECLARE @MSHD INT

    SELECT @MSHD = MSHD
    FROM inserted

    DECLARE @SoDeTai INT

    SELECT @SoDeTai = COUNT(*)
    FROM HOIDONG_DT
    WHERE MSHD = @MSHD

    IF @SoDeTai > 10
    BEGIN
        RAISERROR (N'Một hội đồng không thể có quá 10 đề tài.')
        ROLLBACK TRANSACTION
        RETURN
    END
END
-- C2 --
GO
CREATE TRIGGER C2
ON HOIDONG_DT FOR INSERT  
AS     
	BEGIN 
	DECLARE @MSHD INT       
	SELECT @MSHD = MSHD FROM INSERTED       
	IF(SELECT COUNT(MSDT) FROM HOIDONG_DT WHERE MSHD = @MSHD GROUP BY MSHD) > 10
	BEGIN            
	PRINT N'Một hội đồng không thể có quá 10 đề tài'           
	ROLLBACK TRANSACTION         
	END  
	ELSE PRINT N'Không lỗi'
	END
	SELECT @@ERROR;

-- C3 --
CREATE TRIGGER C3
ON SV_DETAI FOR INSERT  
AS     
BEGIN 
    DECLARE @MSDT CHAR(6)
    SELECT @MSDT = MSDT FROM INSERTED

    DECLARE @SoSinhVien INT
    SELECT @SoSinhVien = COUNT(MSSV)
    FROM SV_DETAI 
    WHERE MSDT = @MSDT

    IF @SoSinhVien > 3
    BEGIN            
        PRINT N'Một đề tài không thể có quá 3 sinh viên'           
        ROLLBACK TRANSACTION         
    END  
    ELSE 
        PRINT N'Không lỗi'
END

-- C4 --
GO
CREATE TRIGGER C4
ON GIAOVIEN FOR UPDATE
AS
	BEGIN
		IF EXISTS (SELECT * FROM INSERTED I, HOCHAM HH, GV_HV_CN HV
		WHERE I.MSHH = HH.MSHH AND I.MSGV = HV.MSGV
		AND HH.TENHH = 'PHO GIAO SU' AND HV.MSHV <> 4)
			BEGIN
				PRINT N'Giáo viên có học hàm PGS phải là tiến sĩ'
				ROLLBACK TRANSACTION
			END
		ELSE PRINT N'Không lỗi'
	END
-- D1 --
GO
CREATE FUNCTION D1(@x1 CHAR(6)) RETURNS FLOAT AS  
BEGIN
RETURN (
    SELECT AVG(DIEM) 
    FROM (
        SELECT DIEM FROM GV_HDDT WHERE MSDT = @x1
        UNION ALL
        SELECT DIEM FROM GV_PBDT WHERE MSDT = @x1
        UNION ALL 
        SELECT DIEM FROM GV_UVDT WHERE MSDT = @x1
    ) AS A
)
END
SELECT dbo.D1('97004')  AS DTB
-- D2 --
GO
CREATE FUNCTION D2(@x1 CHAR(6)) RETURNS CHAR(10) AS
BEGIN
	DECLARE @DTB FLOAT
	SELECT @DTB = AVG(DIEM) 
	FROM (
        SELECT DIEM FROM GV_HDDT WHERE MSDT = @x1
        UNION ALL
        SELECT DIEM FROM GV_PBDT WHERE MSDT = @x1
        UNION ALL 
        SELECT DIEM FROM GV_UVDT WHERE MSDT = @x1
    ) AS A
	IF (@DTB >= 5)
		BEGIN 
			RETURN 'DAT'
		END
	IF (@DTB >=0)
		BEGIN
			RETURN 'KHONGDAT'
		END
	RETURN 'LOI'
END

SELECT dbo.D2('97004') XEPLOAI
-- D3 --
GO
CREATE FUNCTION  D3(@MSDT CHAR(6)) RETURNS TABLE
AS
RETURN
(
    SELECT SV.MSSV, SV.TENSV
    FROM SINHVIEN SV JOIN SV_DETAI SD 
	ON SV.MSSV = SD.MSSV
    WHERE SD.MSDT = @MSDT
);
CREATE TABLE DETAI_DIEM
(
	MSDT CHAR(6) PRIMARY KEY,
	FOREIGN KEY (MSDT) REFERENCES DETAI (MSDT),
	DIEMTB FLOAT NOT NULL
)
SELECT * FROM DBO.D3('97005')
-- D1 --
GO
DECLARE @DUYET CURSOR, @MSDT CHAR(6), @DTB FLOAT
SET @DUYET = CURSOR FOR SELECT MSDT FROM DETAI
OPEN @DUYET
FETCH NEXT FROM @DUYET INTO @MSDT
WHILE (@@FETCH_STATUS = 0)
BEGIN
	IF EXISTS (SELECT * FROM DETAI WHERE MSDT = @MSDT)
		BEGIN
			SELECT @DTB = AVG(DIEM)
			FROM (SELECT * FROM GV_HDDT 
			UNION SELECT * FROM GV_PBDT 
			UNION SELECT * FROM GV_UVDT) AS DIEMTONGHOP 
			WHERE MSDT = @MSDT  
			
			INSERT INTO DETAI_DIEM VALUES(@MSDT, @DTB) 
			FETCH NEXT FROM @DUYET INTO @MSDT
		END 
		ELSE SET @DTB = 0 
END 
CLOSE @DUYET 
DEALLOCATE @DUYET
-- D2 --
GO
CREATE PROCEDURE TinhDiemTrungBinh
AS
BEGIN
    DECLARE @DUYET CURSOR, @MSDT CHAR(6), @DTB FLOAT

    SET @DUYET = CURSOR FOR SELECT MSDT FROM DETAI
    OPEN @DUYET
    FETCH NEXT FROM @DUYET INTO @MSDT

    WHILE (@@FETCH_STATUS = 0)
    BEGIN
        IF EXISTS (SELECT * FROM DETAI WHERE MSDT = @MSDT)
        BEGIN
            SELECT @DTB = AVG(DIEM)
            FROM (
                SELECT * FROM GV_HDDT WHERE MSDT = @MSDT
                UNION ALL
                SELECT * FROM GV_PBDT WHERE MSDT = @MSDT
                UNION ALL
                SELECT * FROM GV_UVDT WHERE MSDT = @MSDT
            ) AS DIEMTONGHOP 
            WHERE MSDT = @MSDT  

            INSERT INTO DETAI_DIEM VALUES(@MSDT, @DTB) 
            FETCH NEXT FROM @DUYET INTO @MSDT
        END 
        ELSE 
            SET @DTB = 0 
    END 

    CLOSE @DUYET 
    DEALLOCATE @DUYET
END

EXEC TinhDiemTrungBinh
SELECT * FROM DETAI_DIEM

-- D3 --

ALTER TABLE DETAI_DIEM
ADD XEPLOAI NVARCHAR(20)

-- D3 --
GO
CREATE PROCEDURE CapNhatXepLoai
AS
BEGIN
    DECLARE @MSDT CHAR(6)
    DECLARE @DIEM_TRUNG_BINH FLOAT
    DECLARE @XEP_LOAI NVARCHAR(20)

    DECLARE dt_cursor CURSOR FOR
    SELECT MSDT, DIEMTB FROM DETAI_DIEM

    OPEN dt_cursor
    FETCH NEXT FROM dt_cursor INTO @MSDT, @DIEM_TRUNG_BINH

    WHILE @@FETCH_STATUS = 0
    BEGIN
        IF @DIEM_TRUNG_BINH >= 9 AND @DIEM_TRUNG_BINH <= 10
            SET @XEP_LOAI = N'Xuất sắc'
        ELSE IF @DIEM_TRUNG_BINH >= 8 AND @DIEM_TRUNG_BINH < 9
            SET @XEP_LOAI = N'Giỏi'
        ELSE IF @DIEM_TRUNG_BINH >= 7 AND @DIEM_TRUNG_BINH < 8
            SET @XEP_LOAI = N'Khá'
        ELSE IF @DIEM_TRUNG_BINH >= 5 AND @DIEM_TRUNG_BINH < 7
            SET @XEP_LOAI = N'Trung bình'
        ELSE
            SET @XEP_LOAI = N'Không đạt'

        UPDATE DETAI_DIEM
        SET XEPLOAI = @XEP_LOAI
        WHERE MSDT = @MSDT

        FETCH NEXT FROM dt_cursor INTO @MSDT, @DIEM_TRUNG_BINH
    END

    CLOSE dt_cursor
    DEALLOCATE dt_cursor
END

EXEC CapNhatXepLoai
SELECT * FROM DETAI_DIEM
